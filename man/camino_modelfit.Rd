% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/camino_modelfit.R
\name{camino_modelfit}
\alias{camino_modelfit}
\title{Wrapper for Camino \code{modelfit} function}
\usage{
camino_modelfit(infile, outfile = NULL, scheme, mask, model = c("dt", "ldt",
  "nldt_pos", "nldt", "ldt_wtd"), inputdatatype = c("float", "char", "short",
  "int", "long", "double"), maskdatatype = c("float", "char", "short", "int",
  "long", "double"), outputdatatype = c("double", "float", "char", "short",
  "int", "long"), startpoint = NULL, outliermap = NULL, noisemap = NULL,
  residualmap = NULL, sigma = NULL, bgthresh = NULL, csfthresh = NULL,
  gradadj = NULL, verbose = TRUE)
}
\arguments{
\item{infile}{Input 4D image}

\item{outfile}{Output filename for diffusion tensor}

\item{scheme}{file of Camino scheme with b-values and b-vectors}

\item{mask}{Provides the name of a file containing a brain / background mask.
The file can be raw binary or a NIFTI image.
Raw binary files must be big endian; the default data type is 16-bit shorts,
 but can be changed using the -maskdatatype option.
 The program does not process background voxels, but outputs the same
 number of values in background voxels and foreground voxels.
 Each value is zero in background voxels apart from the exit code which is -1.}

\item{model}{Type of model used: 1-tensor: dt (linear diffusion tensor, default),
ldt - same as dt
nldt_pos (nonlinear optimization, constrained to be positive semi-definite),
nldt     (unconstrained nonlinear optimization),
ldt_wtd  (weighted linear)}

\item{inputdatatype}{Input data type}

\item{maskdatatype}{Specifies the type of the mask file;
must be big-endian byte ordering. Ignored if a NIFTI mask is used.}

\item{outputdatatype}{Output data type, ignored if \code{outfile} is specified.}

\item{startpoint}{Specifies the starting values for the model.}

\item{outliermap}{Specifies the name of the file to contain the outlier map generated by the RESTORE algorithm. See restore(1).}

\item{noisemap}{Specifies the name of the file to contain the estimated noise variance on the diffusion-weighted signal, generated by a weighted tensor fit. The data type of this file is big-endian double.}

\item{residualmap}{Specifies the name of the file to contain the weighted residual
errors after computing a weighted linear tensor fit. One value is produced
per measurement, in voxel order. The data type of this file is big-endian double.
 Images of the residuals for each measurement can be extracted with shredder.}

\item{sigma}{Specifies the standard deviation of the noise in the data.
Required by the RESTORE algorithm. See restore(1). See datastats(1)
for help on how to compute sigma for specific data sets.}

\item{bgthresh}{Sets a threshold on the average q=0 measurement to
separate foreground and background. The program does not process
background voxels, but outputs the same number of values in background
voxels and foreground voxels. Each value is zero in background voxels
apart from the exit code which is -1.}

\item{csfthresh}{Sets a threshold on the average q=0 measurement to
determine which voxels are CSF. This program does not treat CSF voxels any
different to other voxels.}

\item{gradadj}{file of gradient adjustments (relevant for HCP).}

\item{verbose}{print diagnostic messages}
}
\description{
Performs the Camino \code{modelfit} function
}

